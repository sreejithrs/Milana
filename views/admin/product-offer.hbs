<section>
  <div class="container align-items-center " style="padding-top: 4rem;">
    <div class="justify-content-center d-flex">

      <form id="proOfferForm" method="post" name="formpro" onsubmit="return prosubmit()">
        <div class="col-md-12 text-center">
          <p class="admin-logo">PRODUCT OFFER</p>
        </div>
        <div class="card-product pt-4">
          <div class="row">
            <div class="col-md-12 d-flex m-4">
              <div class="font-weight-bold text-uppercase mt-2">Offer Name :</div>
              <input type="text" class="form-control col-md-6 col-sm-4 col-4 ml-2" name="offerType" value="Product">
              <small id="err"></small>
            </div>
          </div>
          <div class="row">
            <div class="col-md-12 d-flex m-4">
              <div class="font-weight-bold text-uppercase mt-2">Category :</div>
              <div class="ml-3">
                <select name="category" id="offerCategory">
                  <option value="selectcard">Select</option>
                  {{#each cat}}
                  <option value="{{this.Category}}" name="offerType">
                    {{this.Category}}</option>
                  {{/each}}

                </select>

              </div>
            </div>
          </div>


          <div class="row">
            <div class="col-md-12 d-flex m-4">
              <div class="font-weight-bold text-uppercase mt-2">PRODUCTS</div>
              <select name="items" id="offerProducts" style="display:block !important;"></select>
            </div>
          </div>

          <div class="row">
            <div class="col-md-12 d-flex m-4">
              <datalist id="browsers">
                {{#each viewPro}}
                <option data-thumbnail="/product-image/{{this._id}}image.png">
                  <img src="/product-image/{{this._id}}image.png" alt="">
                  {{this.name}}
                </option>

                {{/each}}

              </datalist>
            </div>
          </div>
          <div class="row">
            <div class="col-md-12 d-flex m-4">
              <div class="font-weight-bold text-uppercase mt-2" for="birthdaytime">Validity:</div>
              <input type="date" name="validity">
              <p id="err2"></p>
            </div>
          </div>
          <div class="row">
            <div class="col-md-12 d-flex m-4">
              <div class="font-weight-bold text-uppercase mt-2" for="discount">Discount</div>
              <input type="number" name="discount" id="discount" maxlength="4" min="1" max="99">
            </div>
          </div>
          <div class="text-center mt-4 pb-4">
            <button class="btn btn-success" type="submit">Submit</button>
          </div>
        </div>
      </form>
    </div>
  </div>
  <div class="d-flex justify-content-center mt-5">
    <div class="col-md-6">
      <table class="table table-bordered table-striped">
        <thead>
          <tr>
            <th>Type of Offer</th>
            <th>Offer Items</th>
            <th>Discount</th>
            <th>Validity</th>
            <th>Actions</th>
            <th><span class="glyphicon glyphicon-remove"></span>
            </th>
          </tr>
        </thead>
        {{#each findofferPro}}
        <tbody id="game-table">
          <tr>
            <!-- Here will be added the games -->
            <td>{{this.offerType}}</td>
            <td>{{this.items}}</td>
            <td>{{this.discount}}</td>
            <td>{{this.validity}}</td>
            <td><a onclick="deleteProOffer('{{this._id}}','{{this.items}}')" class="btn btn-danger">delete</a></td>
          </tr>

        </tbody>
        {{/each}}
      </table>
    </div>
  </div>
</section>



<script>
  //validation
  function prosubmit() {
    var offerType = document.formpro.offerType;
    var items = document.formpro.items;
    var price = document.formpro.price;
    var validity = document.formpro.validity;
    if (offerType.value.length <= 0) {
      document.getElementById('err').innerHTML = 'Offer Type is required'
      offerType.focus();
      return false;
    } else if (items.value.length <= 0) {
      document.getElementById('err1').innerHTML = 'Offer Type is required'
      items.focus();
      return false;
    } else if (validity.value.length <= 0) {
      document.getElementById('err2').innerHTML = 'Offer validity is required'
      validity.focus();
      return false;
    } else {
      return true;
    }
  }

  //Delete Pro Offer


  function deleteProOffer(proOfferId, profferItem) {
    const swalWithBootstrapButtons = Swal.mixin({
      customClass: {
        confirmButton: 'btn btn-success',
        cancelButton: 'btn btn-danger'
      },
      buttonsStyling: false
    })
    swalWithBootstrapButtons.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, delete it!',
      cancelButtonText: 'No, cancel!',
      reverseButtons: true
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: "/admin/deleteOfferPro",
          method: "POST",
          data: { proOfferId, profferItem },
          success: (response) => {
            if (response.status) {
              swalWithBootstrapButtons.fire(
                'Deleted!',
                'Your file has been deleted.',
                'success'
              ).then(() => {
                location.reload()
              })
            }
          }
        })
      } else if (
        /* Read more about handling dismissals below */
        result.dismiss === Swal.DismissReason.cancel
      ) {

      }
    })
  }

  //product offer

  $('#proOfferForm').submit((e) => {
    console.log("Offer ajax called");
    e.preventDefault()
    $.ajax({
      url: '/admin/product-offer',
      method: 'post',
      data: $('#proOfferForm').serialize(),
      success: (response) => {
        if (response.Exist) {
          Swal.fire({
            icon: 'warning',
            title: 'This Product Offer already Exist !',
            showConfirmButton: false,
            timer: 2500
          })
        } else {
          Swal.fire({
            icon: 'success',
            title: 'Offer Successfully Added !',
            showConfirmButton: false,
            timer: 2500
          })
          setTimeout(() => {
            location.reload();
          }, 2000)
        }
      }
    })
  })

</script>



<script>
  $('#offerCategory').on('change', function () {
    $('#offerProducts').show()
    let cat = this.value
    $.ajax({
      type: "get",
      url: '/admin/getAllPro',
      data: {
        "cat": cat,
      },
      success: function (res) {
        alert(res[0]._id)

        $('#offerProducts')[0].options.length = 0;

        var subArray = res
        subArray.forEach(elem => {
          $('#offerProducts').append($('<option>',
            {
              value: elem,
              text: elem
            }));
        })
      },
      error: function (error) {

      }
    });
  });
</script>